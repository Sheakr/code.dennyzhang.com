* LeetCode: Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree :BLOG:Medium:
#+STARTUP: showeverything
#+OPTIONS: toc:nil \n:t ^:nil creator:nil d:nil
:PROPERTIES:
:type:     binarytree, recurisve
:END:
---------------------------------------------------------------------
Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree
---------------------------------------------------------------------
#+BEGIN_HTML
<a href="https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>
#+END_HTML
Similar Problems:
- [[https://cheatsheet.dennyzhang.com/cheatsheet-leetcode-A4][CheatSheet: LeetCode For Code Interview]]
- [[https://cheatsheet.dennyzhang.com/cheatsheet-followup-A4][CheatSheet: Common Code Problems & Follow-ups]]
- Tag: [[https://code.dennyzhang.com/review-binarytree][#binarytree]], [[https://code.dennyzhang.com/review-recursive][#recursive]]
---------------------------------------------------------------------
Given a binary tree where each path going from the root to any leaf form a valid sequence, check if a given string is a valid sequence in such binary tree. 

We get the given string from the concatenation of an array of integers arr and the concatenation of all values of the nodes along a path results in a sequence in the given binary tree.
 
Example 1:
[[image-blog:Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree][https://raw.githubusercontent.com/dennyzhang/code.dennyzhang.com/master/problems/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree/1.png]]
#+BEGIN_EXAMPLE
Input: root = [0,1,0,0,1,0,null,null,1,0,0], arr = [0,1,0,1]
Output: true
Explanation: 
The path 0 -> 1 -> 0 -> 1 is a valid sequence (green color in the figure). 
Other valid sequences are: 
0 -> 1 -> 1 -> 0 
0 -> 0 -> 0
#+END_EXAMPLE

Example 2:
[[image-blog:Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree][https://raw.githubusercontent.com/dennyzhang/code.dennyzhang.com/master/problems/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree/2.png]]
#+BEGIN_EXAMPLE
Input: root = [0,1,0,0,1,0,null,null,1,0,0], arr = [0,0,1]
Output: false 
Explanation: The path 0 -> 0 -> 1 does not exist, therefore it is not even a sequence.
#+END_EXAMPLE

Example 3:
[[image-blog:Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree][https://raw.githubusercontent.com/dennyzhang/code.dennyzhang.com/master/problems/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree/3.png]]
#+BEGIN_EXAMPLE
Input: root = [0,1,0,0,1,0,null,null,1,0,0], arr = [0,1,1]
Output: false
Explanation: The path 0 -> 1 -> 1 is a sequence, but it is not a valid sequence.
#+END_EXAMPLE
 
Constraints:

- 1 <= arr.length <= 5000
- 0 <= arr[i] <= 9
- Each node's value is between [0 - 9].

Github: [[https://github.com/dennyzhang/code.dennyzhang.com/tree/master/problems/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree][code.dennyzhang.com]]

Credits To: [[https://leetcode.com/problems/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree/description/][leetcode.com]]

Leave me comments, if you have better ways to solve.
---------------------------------------------------------------------
- Solution:

#+BEGIN_SRC python
## https://code.dennyzhang.com/check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree
## Basic Ideas: recurisve
##
## Complexity: Time O(n), Space O(1)
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isValidSequence(self, root: TreeNode, arr: List[int]) -> bool:
        if not root: return len(arr) == 0
        if len(arr) == 0: return False
        if root.val != arr[0]: return False
        if len(arr) == 1:
            return not root.left and not root.right
        return self.isValidSequence(root.left, arr[1:]) or self.isValidSequence(root.right, arr[1:])
#+END_SRC

#+BEGIN_HTML
<div style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/slack.png" alt="slack"/></a></div>
</div>
#+END_HTML
